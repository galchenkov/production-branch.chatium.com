declare type Lang = string
interface LangCtx {
  lang: Lang
}
/**
 * Runtime representation of heap money-typed fields with convenient API for safe money operations.
 *
 * Amount internally is represented as normal float with number for fraction digits defined by the currency standard
 *  but before any operations is converted to integer representation (representing minimal currency subunit)
 *  and then operation result is converted back to decimal.
 *
 * Subunits are always rounded to the nearest integer using "half away from zero" rounding, which differs
 *  from the Math.round behaviour for negative values.
 * @see https://en.wikipedia.org/wiki/Rounding#Round_half_away_from_zero
 *
 * Representation is immutable, any operation creates a new instance.
 *
 * API is in certain degree inspired by Dinero.js lib, but is much more lightweight
 * @see https://dinerojs.com/
 */
export declare class Money {
  readonly amount: number
  readonly currency: Currency
  constructor(money: Money | MoneyLike)
  constructor(serialized: MoneyJson)
  constructor(amount: number, currency: Currency)
  toJSON(): MoneyJson
  toString(): string
  format(ctx: LangCtx, options?: MoneyFormatOptions): string
  add(summand: Money): Money
  substract(subtracted: Money): Money
  multiply(multiplier: number): Money
  divide(divider: number): Money
}
export declare type MoneyJson = [number, Currency]
interface MoneyLike {
  amount: number
  currency: Currency
}
export declare type Currency =
  | 'AED'
  | 'AFN'
  | 'ALL'
  | 'AMD'
  | 'ANG'
  | 'AOA'
  | 'ARS'
  | 'AUD'
  | 'AWG'
  | 'AZN'
  | 'BAM'
  | 'BBD'
  | 'BDT'
  | 'BGN'
  | 'BHD'
  | 'BIF'
  | 'BMD'
  | 'BND'
  | 'BOB'
  | 'BRL'
  | 'BSD'
  | 'BTN'
  | 'BWP'
  | 'BYN'
  | 'BZD'
  | 'CAD'
  | 'CDF'
  | 'CHF'
  | 'CLP'
  | 'CNY'
  | 'COP'
  | 'CRC'
  | 'CUC'
  | 'CUP'
  | 'CVE'
  | 'CZK'
  | 'DJF'
  | 'DKK'
  | 'DOP'
  | 'DZD'
  | 'EGP'
  | 'ERN'
  | 'ETB'
  | 'EUR'
  | 'FJD'
  | 'FKP'
  | 'GBP'
  | 'GEL'
  | 'GGP'
  | 'GHS'
  | 'GIP'
  | 'GMD'
  | 'GNF'
  | 'GTQ'
  | 'GYD'
  | 'HKD'
  | 'HNL'
  | 'HRK'
  | 'HTG'
  | 'HUF'
  | 'IDR'
  | 'ILS'
  | 'IMP'
  | 'INR'
  | 'IQD'
  | 'IRR'
  | 'ISK'
  | 'JEP'
  | 'JMD'
  | 'JOD'
  | 'JPY'
  | 'KES'
  | 'KGS'
  | 'KHR'
  | 'KMF'
  | 'KPW'
  | 'KRW'
  | 'KWD'
  | 'KYD'
  | 'KZT'
  | 'LAK'
  | 'LBP'
  | 'LKR'
  | 'LRD'
  | 'LSL'
  | 'LYD'
  | 'MAD'
  | 'MDL'
  | 'MGA'
  | 'MKD'
  | 'MMK'
  | 'MNT'
  | 'MOP'
  | 'MRU'
  | 'MUR'
  | 'MVR'
  | 'MWK'
  | 'MXN'
  | 'MYR'
  | 'MZN'
  | 'NAD'
  | 'NGN'
  | 'NIO'
  | 'NOK'
  | 'NPR'
  | 'NZD'
  | 'OMR'
  | 'PAB'
  | 'PEN'
  | 'PGK'
  | 'PHP'
  | 'PKR'
  | 'PLN'
  | 'PYG'
  | 'QAR'
  | 'RON'
  | 'RSD'
  | 'RUB'
  | 'RWF'
  | 'SAR'
  | 'SBD'
  | 'SCR'
  | 'SDG'
  | 'SEK'
  | 'SGD'
  | 'SHP'
  | 'SLL'
  | 'SOS'
  | 'SPL'
  | 'SRD'
  | 'STN'
  | 'SVC'
  | 'SYP'
  | 'SZL'
  | 'THB'
  | 'TJS'
  | 'TMT'
  | 'TND'
  | 'TOP'
  | 'TRY'
  | 'TTD'
  | 'TVD'
  | 'TWD'
  | 'TZS'
  | 'UAH'
  | 'UGX'
  | 'USD'
  | 'UYU'
  | 'UZS'
  | 'VEF'
  | 'VND'
  | 'VUV'
  | 'WST'
  | 'XAF'
  | 'XCD'
  | 'XDR'
  | 'XOF'
  | 'XPF'
  | 'YER'
  | 'ZAR'
  | 'ZMW'
  | 'ZWD'
export interface MoneyFormatOptions {
  style?: 'decimal' | 'currency'
  currencyDisplay?: 'symbol' | 'code' | 'name' | 'narrowSymbol'
  signDisplay?: 'always' | 'auto' | 'exceptZero' | 'never'
  currencySign?: 'standard' | 'accounting'
  useGrouping?: 'auto' | boolean
  minimumIntegerDigits?: number
  minimumFractionDigits?: number
  maximumFractionDigits?: number
  minimumSignificantDigits?: number
  maximumSignificantDigits?: number
}

export {}
