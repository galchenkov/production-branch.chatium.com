import { JSXElement, VoidComponent, VoidProps } from '@app/solid-js';
import { Item, ItemEntity } from './Item';
import { Id, Member, Tag } from '../interfaces';
import { Draggable } from '../KanbanView';
export interface Column {
    id: Id;
    board: {
        id: Id;
    };
    title: string;
    position: number;
    backgroundColor?: string;
}
export interface ColumnEntity extends Omit<Column, 'board'> {
    type: 'column';
}
export interface ColumnProps {
    column: ColumnEntity;
    items: ItemEntity[];
    tags: Tag[];
    members: Member[];
    readOnly: boolean;
    showTagTitles?: boolean;
    showItemTitles?: boolean;
    createCardTitle?: string;
    itemChildren?: JSXElement | ((props: VoidProps<{
        item: Item;
        members: Member[];
        tags: Tag[];
    }>) => JSXElement) | undefined;
    onEditColumnClick: (columnId: string) => void;
    onAddItemClick: (columnId: string) => void;
    onEditItemClick: (itemId: string) => void;
    onMouseDown: (event: MouseEvent, columnId: Id) => void;
    onMouseUp: (event: MouseEvent, columnId: Id) => void;
    onItemMouseDown: (event: MouseEvent, itemId: Id) => void;
    onItemMouseUp: (event: MouseEvent, itemId: Id) => void;
    setEntityRefs: (id: Id, ref: Element) => void;
    draggable: Draggable | null;
}
export declare const Column: VoidComponent<ColumnProps>;
interface ColumnOverlayProps extends Pick<ColumnProps, 'column' | 'onMouseUp' | 'readOnly' | 'items' | 'tags' | 'members' | 'showTagTitles' | 'showItemTitles' | 'createCardTitle' | 'onItemMouseUp' | 'itemChildren'> {
    draggable: Draggable;
}
export declare const ColumnOverlay: VoidComponent<ColumnOverlayProps>;
export {};
