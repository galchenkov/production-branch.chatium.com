import { JSXElement, VoidComponent, VoidProps } from '@app/solid-js';
import { ItemFile, Member, Tag, Id } from '../interfaces';
import { Draggable } from '../KanbanView';
export interface Item {
    id: Id;
    position: number;
    column: {
        id: Id;
    };
    title?: string;
    description?: string;
    members?: string[];
    tags?: string[];
    files?: ItemFile[];
    color?: string;
    hideCover?: boolean;
}
export interface ItemEntity extends Item {
    type: 'item';
}
export interface ItemProps {
    item: ItemEntity;
    tags: Tag[];
    members: Member[];
    showTagTitles?: boolean;
    showItemTitles?: boolean;
    height?: string;
    onEditClick: () => void;
    children?: JSXElement | ((props: VoidProps<{
        item: Item;
        members: Member[];
        tags: Tag[];
    }>) => JSXElement) | undefined;
    onMouseDown: (event: MouseEvent, itemId: Id) => void;
    onMouseUp: (event: MouseEvent, itemId: Id) => void;
    setEntityRefs?: (id: Id, ref: Element) => void;
    draggable: Draggable | null;
}
export declare const Item: VoidComponent<ItemProps>;
interface ItemOverlayProps extends Omit<ItemProps, 'onEditClick' | 'onMouseDown' | 'setEntityRefs'> {
}
export declare const ItemOverlay: VoidComponent<ItemOverlayProps>;
export {};
