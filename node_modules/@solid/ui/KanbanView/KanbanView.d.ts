import { VoidComponent, JSXElement, VoidProps } from "@app/solid-js";
import { Item, ItemEntity } from "./components/Item";
import { Column, ColumnEntity } from "./components/Column";
import { Board, Id, Member, Tag } from "./interfaces";
export declare const POSITION_DELTA = 1000;
export interface Point {
    x: number;
    y: number;
}
export type Entity = ItemEntity | ColumnEntity;
export interface Draggable {
    id: Id;
    type: Entity['type'];
    column?: ItemEntity['column'];
    moved: boolean;
    dirty: boolean;
    initial: Point;
    transform: Point;
    center: Point;
    delta: Point;
    width: number;
    height: number;
}
export interface Props {
    id?: string;
    board: Board;
    columns: Column[];
    items: Item[];
    tags: Tag[];
    members: Member[];
    deadzone?: number;
    canEdit: boolean;
    showTagTitles?: boolean;
    showItemTitles?: boolean;
    fixedColumns?: boolean;
    createColumnTitle?: string;
    createCardTitle?: string;
    itemChildren?: JSXElement | ((props: VoidProps<{
        item: Item;
        members: Member[];
        tags: Tag[];
    }>) => JSXElement) | undefined;
    onColumnChange: (columnsId: string, newColumns: Column[]) => void;
    onItemChange: (itemId: string, newItems: Item[]) => void;
    onAddColumnClick: () => void;
    onEditColumnClick: (columnId: string) => void;
    onAddItemClick: (columndId: string) => void;
    onEditItemClick: (columnId: string, itemId: string) => void;
}
export declare const KanbanView: VoidComponent<Props>;
