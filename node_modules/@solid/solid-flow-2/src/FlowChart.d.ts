import { Component } from "@app/solid-js";
interface Position {
    x: number;
    y: number;
}
export interface NodeData {
    id: string;
    ref?: any;
    data: {
        label?: string;
        content: any;
    };
    inputs: number;
    outputs: number;
    edgesIn: string[];
    edgesOut: string[];
}
export interface NodeOffsets {
    inputs: {
        offset: Position;
    }[];
    outputs: {
        offset: Position;
    }[];
}
export interface NodeProps {
    id: string;
    position: {
        x: number;
        y: number;
    };
    data: {
        label?: string;
        content: any;
    };
    inputs: number;
    outputs: number;
    actions?: {
        delete: boolean;
    };
}
export interface EdgeProps {
    id: string;
    sourceNode: string;
    targetNode: string;
    sourceOutput: number;
    targetInput: number;
}
interface Props {
    nodes: NodeProps[];
    edges: EdgeProps[];
    onNodesChange: (newNodes: NodeProps[]) => void;
    onEdgesChange: (newEdges: EdgeProps[]) => void;
    scale?: number;
    onScaleChange?: (newScale: number) => void;
    pan?: Position;
    onPanChange?: (newPosition: Position) => void;
}
export declare const FlowChart: Component<Props>;
export {};
