import { GetSupportedTranslationLangsOptions, TranslationLangInfo } from 'services/ugc-runner/runtime/runtimeTypes'

declare type DynVar = string | number | boolean
/**
 * Represents statically marked up translation
 * @see prepareTranslation
 */
export declare type TranslationKey<T extends string = string> = [T, StaticTranslateArgs | undefined]
declare type StaticTranslateArgs = {
  [key: string]: StaticInCodeSelector | string
} & {
  $ns?: string
}
declare type StaticInCodeSelector = {
  $pluralType?: Intl.PluralRulesOptions['type']
  $other?: string | number
} & Record<string | number, DynVar>
declare function prepareTranslation<T extends string>(key: T, args?: StaticTranslateArgs): TranslationKey<T>
declare type Lang = string
export declare const t: typeof prepareTranslation
/**
 * Returns
 * @returns null if current plugin app doesn't have permission to call getSupportedTranslationLangs on the account
 */
export declare function getSupportedTranslationLangs(
  _ctx: RichUgcCtx,
  options?: GetSupportedTranslationLangsOptions,
): Promise<TranslationLangInfo | null>

export {}
