declare type JSONInputValue = string | number | boolean | null | JSONInputValue[] | JSONInputObject | undefined
declare type JSONInputObject = {
  [key: string]: JSONInputValue
}
declare type TimeUnit =
  | 'milliseconds'
  | 'seconds'
  | 'minutes'
  | 'hours'
  | 'days'
  | 'weeks'
  | 'months'
  | 'quarters'
  | 'years'
interface UgcJobScheduleParams {
  allowRetry?: boolean
}
export declare function scheduleJobAt(
  ctx: RichUgcCtx,
  startAt: Date,
  url: string,
  params?: JSONInputValue,
  scheduleParams?: UgcJobScheduleParams,
): Promise<string>
export declare function scheduleJobAfter(
  ctx: RichUgcCtx,
  amount: number,
  unit: TimeUnit,
  url: string,
  params?: JSONInputValue,
  scheduleParams?: UgcJobScheduleParams,
): Promise<string>
export declare function scheduleJobAsap(
  ctx: RichUgcCtx,
  url: string,
  params?: JSONInputValue,
  scheduleParams?: UgcJobScheduleParams,
): Promise<string>
export declare function cancelJob(ctx: RichUgcCtx, jobId: string): Promise<void>

export {}
