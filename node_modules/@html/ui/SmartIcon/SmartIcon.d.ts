import { jsx } from '@app/html-jsx';
export declare function SmartIcon(props: SmartIconProps): jsx.JSX.Element;
export declare const SmartIconInitializer: {
    (props: {
        ref: string;
        ctx: import("@app/html-jsx").InitializerCtx;
    }): jsx.JSX.Element;
    initializer: (props: Omit<unknown, "ctx" | "element"> & {
        element: HTMLDivElement;
        ctx: {
            t: (input: string) => string;
            account: {
                url(path: string): string;
            };
        };
    }) => void;
};
export declare function fillIconSizeProps(iconSize: number | string | undefined, result: Record<string, unknown>, addPx?: boolean): void;
export declare function getIconRenderInfo(nameOrPair: string | string[] | undefined, iconSize: number | string | undefined, rawStyles?: {}, options?: {}): {
    type: string;
    name: string;
    size: string;
    src?: undefined;
    path?: undefined;
} | {
    type: string;
    src: string;
    name?: undefined;
    size?: undefined;
    path?: undefined;
} | {
    type: string;
    path: string;
    name?: undefined;
    size?: undefined;
    src?: undefined;
};
export declare function getIconPath(family: string, name: string): string;
export declare function getImagePath(family: string, name: string): string;
export declare function normalizeIconName(name: string | string[] | undefined): string[];
export declare function getIconSizePx(iconSize: number | string | undefined): number;
export declare function parseNumberString(numOrStr: number | string | undefined): number | null;
export declare function normalizeIconSize(iconSize: number | string | undefined): number | null | undefined;
export declare const standardIconSizeMapping: Map<string, number>;
interface SmartIconProps {
    ctx: app.Ctx;
    circle?: boolean;
    text?: string;
    name?: string | string[];
    url?: string;
    size?: number | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl';
    sprite?: boolean;
    style?: Record<string, unknown>;
}
export {};
